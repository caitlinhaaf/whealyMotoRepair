{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/404.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["React","createContext","Header","_ref","siteTitle","react_default","a","createElement","style","background","marginBottom","margin","maxWidth","padding","gatsby_link_default","to","color","textDecoration","defaultProps","Layout","children","data","_856328897","Fragment","header","site","siteMetadata","title","paddingTop","Date","getFullYear","href","NotFoundPage","layout","seo","SEO","description","lang","meta","_public_static_d_3381535020_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","ogImageUrl","siteUrl","ogImage","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","keywords","author","concat","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"sJAa2BA,IAAMC,cAAc,ICT/C,IAAMC,EAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OACbC,EAAAC,EAAAC,cAAA,UACEC,MAAO,CACLC,WAAU,gBACVC,aAAY,YAGdL,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACLG,OAAM,SACNC,SAAU,IACVC,QAAO,sBAGTR,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAAEG,OAAQ,IACnBN,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CACES,GAAG,IACHP,MAAO,CACLQ,MAAK,QACLC,eAAc,SAGfb,OAWXF,EAAOgB,aAAe,CACpBd,UAAS,IAGIF,QCUAiB,EArCA,SAAAhB,GAAkB,IAAfiB,EAAejB,EAAfiB,SACVC,EAAOC,EAAAD,KAUb,OACEhB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiB,SAAA,KACElB,EAAAC,EAAAC,cAACiB,EAAD,CAAQpB,UAAWiB,EAAKI,KAAKC,aAAaC,QAC1CtB,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACLG,OAAM,SACNC,SAAU,IACVC,QAAO,wBACPe,WAAY,IAGdvB,EAAAC,EAAAC,cAAA,YAAOa,GACPf,EAAAC,EAAAC,cAAA,oBACK,IAAIsB,MAAOC,cADhB,mBAGEzB,EAAAC,EAAAC,cAAA,KAAGwB,KAAK,4BAAR,uBC3BKC,UARM,kBACnB3B,EAAAC,EAAAC,cAAC0B,EAAD,KACE5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAKP,MAAM,mBACXtB,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,uJCGJ,SAAS4B,EAAThC,GAAiD,IAAlCiC,EAAkCjC,EAAlCiC,YAAaC,EAAqBlC,EAArBkC,KAAMC,EAAenC,EAAfmC,KAAMX,EAASxB,EAATwB,MAC9BF,EADuCc,EAAAlB,KACvCI,KAgBFe,EAAkBJ,GAAeX,EAAKC,aAAaU,YACnDK,EAAU,GAAMhB,EAAKC,aAAagB,QAAUjB,EAAKC,aAAaiB,QAEpE,OACEC,EAAAtC,EAAAC,cAACsC,EAAAvC,EAAD,CACEwC,eAAgB,CACdT,QAEFV,MAAOA,EACPoB,cAAa,QAAUtB,EAAKC,aAAaC,MACzCW,KAAM,CACJ,CACEU,KAAI,cACJC,QAAST,GAEX,CACEU,SAAQ,WACRD,QAAStB,GAEX,CACEqB,KAAI,WACJC,QAASxB,EAAKC,aAAayB,UAE7B,CACED,SAAQ,iBACRD,QAAST,GAEX,CACEU,SAAQ,WACRD,QAASR,GAEX,CACES,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASxB,EAAKC,aAAa0B,QAE7B,CACEJ,KAAI,gBACJC,QAAStB,GAEX,CACEqB,KAAI,gBACJC,QAASR,GAEX,CACEO,KAAI,sBACJC,QAAST,IAEXa,OAAOf,KAKfH,EAAIjB,aAAe,CACjBmB,KAAI,KACJC,KAAM,GACNF,YAAW,IAUED,gXCtGf,IAAsBmB,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,yKCsBhCK,UAjBU,SAAAxD,GAAiC,IAA9ByD,EAA8BzD,EAA9ByD,SAAUC,EAAoB1D,EAApB0D,cACpC,OAAKA,EAGE7D,IAAMO,cAAcuD,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV","file":"component---src-pages-404-js-55d7b7e368c9bcb06997.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\n// import \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            keywords\n            ogImage\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const ogImageUrl = `${site.siteMetadata.siteUrl}${site.siteMetadata.ogImage}`\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          name: `keywords`,\n          content: site.siteMetadata.keywords,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:image`,\n          content: ogImageUrl,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:image`,\n          content: ogImageUrl,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}